require 'json'

class MinifyFactory
  
  def initialize
    @zpracovavanyRadek = ""
    @status =  {
          inComment: false
    } 
    #hash klicovych js slov, kazdy zaznam obsahuje 2 bool hodnoty - jestli zachovat mezeru pred a mezeru po
    @klicova_slova = JSON.parse($reserved_words)
  end
  
  
  def zpracujRadek(radek)
    @zpracovavanyRadek = radek
    vyresKomentare
    return @zpracovavanyRadek if @zpracovavanyRadek.empty?
    vyresMezery
    return @zpracovavanyRadek if @zpracovavanyRadek.empty?
    
    
    @zpracovavanyRadek
  end
  
  
  private 
  
  
  #zpracovává komentáře..
  def vyresKomentare
    #je v zakomentovaném
    if @status[:inComment] 
      if @zpracovavanyRadek.include?("*/") 
        @zpracovavanyRadek = @zpracovavanyRadek.split("*/").drop(1).join("*/")
        @status[:inComment] = false
        vyresKomentare if @zpracovavanyRadek.include?("/*")
      else
        @zpracovavanyRadek = ""
      end        
    #není v zakomentovaném
    else      
      @zpracovavanyRadek = (@zpracovavanyRadek.gsub!("/*", "*/") || @zpracovavanyRadek).split("*/")
      @status[:inComment] = (@zpracovavanyRadek.size%2==0)? true : false
      @zpracovavanyRadek = @zpracovavanyRadek.values_at(* @zpracovavanyRadek.each_index.select {|i| i.even?}).join(" ")
      #jednoradkove komenty
      if @zpracovavanyRadek.include?("//")
        @zpracovavanyRadek = @zpracovavanyRadek.split("//").first;
      end
    end
    
  end 

    #zpracovává bílé znaky.. 
  def vyresMezery
    # prazdne radky
    if @zpracovavanyRadek.strip.empty?
      @zpracovavanyRadek = ""
      return true    
    end
    
    #odstranime zbytecne mezery pred a za radkem
    @zpracovavanyRadek.strip! + " "
    #rozdelime na retezce a kod - kod je v lichych, retezce v sudych
    retezce_neretezce = []
    aktualni_oddelovac = nil
    indexVPoli = 0
    @zpracovavanyRadek.each_char do |c|
      if aktualni_oddelovac.nil? and (c=="'" or c == '"')
        aktualni_oddelovac = c
        indexVPoli+=1
      elsif aktualni_oddelovac.nil? or aktualni_oddelovac!=c
        retezce_neretezce[indexVPoli]||="" 
        retezce_neretezce[indexVPoli]+= c
      else 
        indexVPoli+=1
        aktualni_oddelovac = nil
      end
    end
    @zpracovavanyRadek = ""
    retezce_neretezce.each_with_index do |kod, i|
      #retezec, nesahat na nej
      if i%2
        @zpracovavanyRadek+=kod
      else
        kod.gsub!(/\s/, " ")
        
        
      end
    end
    
    
  
  
    
  end

  
end
